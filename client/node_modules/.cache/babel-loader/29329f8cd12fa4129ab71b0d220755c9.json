{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\byron\\\\Documents\\\\Docs\\\\Programming\\\\sap_heroku\\\\client\\\\src\\\\views\\\\home\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { Typography, TextField, Button, Divider } from \"@material-ui/core\";\nimport { motion } from \"framer-motion\"; // Local imports\n\nimport Display from \"components/Display/display\";\nimport LoadingSkeleton from \"components/Skeleton/skeleton\";\nimport styles from \"./styles.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Home = props => {\n  _s();\n\n  const [Query, setQuery] = useState(\"\");\n  const [PrevQuery, setPrevQuery] = useState(\"\");\n  const [Sentiment, setSentiment] = useState(\"\");\n  const [pieData, setPieData] = useState([]);\n  const [tweetList, setTweetList] = useState([]);\n  const [loaded, setLoaded] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [chartLoad, setChartLoad] = useState(false);\n  const [Filter, setFilter] = useState(\"Positive\");\n  const [queryList, setQueryList] = useState([]);\n  const {\n    classes\n  } = props;\n\n  const handleFilter = value => {\n    setFilter(value);\n  };\n\n  const handleSubmit = event => {\n    console.log(\"here\");\n    console.log(Query);\n\n    if (Query !== \"\") {\n      // string.charAt(0).toUpperCase() + string.slice(1);\n      setLoaded(false);\n      setLoading(true);\n      setChartLoad(false);\n      setFilter(\"Positive\");\n      setPrevQuery(Query.charAt(0).toUpperCase() + Query.slice(1));\n      setQuery(\"\");\n      setTimeout(() => {\n        fetchTweets();\n      }, 500);\n      setTimeout(() => {\n        setChartLoad(true);\n      }, 1000);\n    }\n\n    event.preventDefault();\n  };\n\n  const fetchTweets = () => {\n    axios.get('/api/getTweets', {\n      params: {\n        keyword: Query,\n        isConfirmed: false\n      }\n    }).then(response => {\n      let data = response.data;\n      setLoading(false);\n      setLoaded(true);\n      setSentiment(data[0]);\n      setPieData(data[1]);\n      setTweetList(data[2]);\n    }).catch(error => {\n      console.error(error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      className: classes.title,\n      children: \"Welcome to the Twitter Sentiment Tool\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      className: classes.desc,\n      children: \"Enter a topic to find the overall sentiment on Twitter.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(motion.div, {\n      layout: true,\n      className: classes.activeContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        className: classes.input,\n        noValidate: true,\n        autoComplete: \"off\",\n        onSubmit: handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(motion.div, {\n          layout: true,\n          className: classes.inputRow,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            className: classes.field,\n            label: \"Search\",\n            variant: \"outlined\",\n            value: Query,\n            onChange: event => setQuery(event.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.submitButton,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              type: \"Submit\",\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this), loading && /*#__PURE__*/_jsxDEV(LoadingSkeleton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 25\n      }, this), loaded && /*#__PURE__*/_jsxDEV(Display, {\n        chartLoad: chartLoad,\n        prevQuery: PrevQuery,\n        sentiment: Sentiment,\n        filter: Filter,\n        tweetList: tweetList,\n        onChange: handleFilter,\n        pieData: pieData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 7\n  }, this);\n};\n\n_s(Home, \"4n4DWceZFgmdcnoqhH5zcUnokjY=\");\n\n_c = Home;\nexport default withStyles(styles)(Home);\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/Users/byron/Documents/Docs/Programming/sap_heroku/client/src/views/home/index.js"],"names":["React","useState","useEffect","axios","withStyles","Typography","TextField","Button","Divider","motion","Display","LoadingSkeleton","styles","Home","props","Query","setQuery","PrevQuery","setPrevQuery","Sentiment","setSentiment","pieData","setPieData","tweetList","setTweetList","loaded","setLoaded","loading","setLoading","chartLoad","setChartLoad","Filter","setFilter","queryList","setQueryList","classes","handleFilter","value","handleSubmit","event","console","log","charAt","toUpperCase","slice","setTimeout","fetchTweets","preventDefault","get","params","keyword","isConfirmed","then","response","data","catch","error","root","title","desc","activeContainer","input","inputRow","field","target","submitButton"],"mappings":"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","sourcesContent":["import { React, useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { Typography, TextField, Button, Divider } from \"@material-ui/core\";\r\nimport { motion } from \"framer-motion\"\r\n\r\n// Local imports\r\nimport Display from \"components/Display/display\"\r\nimport LoadingSkeleton from \"components/Skeleton/skeleton\"\r\nimport styles from \"./styles.js\";\r\n\r\nconst Home = (props) => {\r\n    const [Query, setQuery] = useState(\"\");\r\n    const [PrevQuery, setPrevQuery] = useState(\"\");\r\n    const [Sentiment, setSentiment] = useState(\"\");\r\n    const [pieData, setPieData] = useState([]);\r\n    const [tweetList, setTweetList] = useState([]);\r\n    const [loaded, setLoaded] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n    const [chartLoad, setChartLoad] = useState(false);\r\n    const [Filter, setFilter] = useState(\"Positive\");\r\n    const [queryList, setQueryList] = useState([]);\r\n    const { classes } = props;\r\n\r\n    const handleFilter = (value) => {\r\n      setFilter(value);\r\n    }\r\n\r\n  \r\n    const handleSubmit = (event) => {\r\n      console.log(\"here\")\r\n      console.log(Query)\r\n      if (Query !== \"\")\r\n      {\r\n        // string.charAt(0).toUpperCase() + string.slice(1);\r\n        setLoaded(false);\r\n        setLoading(true);\r\n        setChartLoad(false);\r\n        setFilter(\"Positive\");\r\n        setPrevQuery(Query.charAt(0).toUpperCase() + Query.slice(1));\r\n        setQuery(\"\");\r\n        setTimeout(() => {fetchTweets();}, 500)\r\n        setTimeout(() => {setChartLoad(true);}, 1000)\r\n      \r\n      }   \r\n      event.preventDefault();\r\n    };\r\n\r\n    const fetchTweets = () => {\r\n      axios.get('/api/getTweets', { params:{ \r\n        keyword: Query,\r\n        isConfirmed: false,\r\n      }})\r\n      .then((response) => {\r\n        let data = response.data;\r\n        setLoading(false);\r\n        setLoaded(true);\r\n        setSentiment(data[0]);\r\n        setPieData(data[1]);\r\n        setTweetList(data[2]);\r\n      }).catch((error) => {\r\n        console.error(error);\r\n      });\r\n    }\r\n\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <Typography className={classes.title}>Welcome to the Twitter Sentiment Tool</Typography>\r\n        <Typography className={classes.desc}>Enter a topic to find the overall sentiment on Twitter.</Typography>\r\n        <motion.div layout className={classes.activeContainer}>\r\n            <form className={classes.input} noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\r\n              <motion.div layout className={classes.inputRow}>\r\n                <TextField \r\n                    className={classes.field}\r\n                    label=\"Search\"\r\n                    variant=\"outlined\"\r\n                    value={Query}\r\n                    onChange={(event) => setQuery(event.target.value)}\r\n                />\r\n                <div className={classes.submitButton}>\r\n                  <Button type=\"Submit\">Submit</Button>\r\n                </div>\r\n              </motion.div>\r\n            </form>\r\n            {loading && <LoadingSkeleton /> }\r\n            {loaded && \r\n                <Display chartLoad={chartLoad} prevQuery={PrevQuery} sentiment={Sentiment} filter={Filter} tweetList={tweetList} onChange={handleFilter} pieData={pieData}\r\n                /> \r\n                }\r\n        </motion.div>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default withStyles(styles)(Home);\r\n"]},"metadata":{},"sourceType":"module"}