{"ast":null,"code":"import React from'react';import{withStyles}from\"@material-ui/core/styles\";import{Typography,TextField,Button,Divider}from\"@material-ui/core\";import PieChartComp from\"components/PieChart/piechart\";import TweetTable from\"components/TweetTable/tweetTable\";import TableButtons from\"components/TableButtons/tableButtons\";import styles from\"./styles\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Display=function Display(props){var classes=props.classes;var pieData=props.pieData;var prevQuery=props.prevQuery;var sentiment=props.sentiment;var chartLoad=props.chartLoad;var filter=props.filter;var tweetList=props.tweetList;var tweetCount=props.tweetCount;var handleFilter=function handleFilter(input){props.onChange(input);};return/*#__PURE__*/_jsxs(\"div\",{className:classes.contentRoot,children:[/*#__PURE__*/_jsx(Divider,{className:classes.divider}),/*#__PURE__*/_jsxs(\"div\",{layout:true,className:classes.searchPane,children:[/*#__PURE__*/_jsx(\"div\",{className:classes.leftPane,children:chartLoad&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:classes.detailCont,children:[/*#__PURE__*/_jsx(Typography,{className:classes.detailsQuery,children:prevQuery}),/*#__PURE__*/_jsxs(Typography,{className:classes.details,children:[\"Sentiment: \",sentiment*100,\"%\"]})]}),/*#__PURE__*/_jsx(PieChartComp,{data:pieData,tweetCount:tweetCount})]})}),/*#__PURE__*/_jsxs(\"div\",{className:classes.tableContainer,children:[/*#__PURE__*/_jsx(TableButtons,{filter:filter,onChange:handleFilter}),/*#__PURE__*/_jsx(\"div\",{className:classes.dataTable,children:/*#__PURE__*/_jsx(TweetTable,{data:tweetList,filterItem:filter})})]})]})]});};export default withStyles(styles)(Display);","map":{"version":3,"sources":["C:/Users/byron/Documents/Docs/Programming/sap_heroku/client/src/components/Display/display.js"],"names":["React","withStyles","Typography","TextField","Button","Divider","PieChartComp","TweetTable","TableButtons","styles","Display","props","classes","pieData","prevQuery","sentiment","chartLoad","filter","tweetList","tweetCount","handleFilter","input","onChange","contentRoot","divider","searchPane","leftPane","detailCont","detailsQuery","details","tableContainer","dataTable"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,UAAT,KAA2B,0BAA3B,CACA,OAASC,UAAT,CAAqBC,SAArB,CAAgCC,MAAhC,CAAwCC,OAAxC,KAAuD,mBAAvD,CAEA,MAAOC,CAAAA,YAAP,KAAyB,8BAAzB,CACA,MAAOC,CAAAA,UAAP,KAAuB,kCAAvB,CACA,MAAOC,CAAAA,YAAP,KAAyB,sCAAzB,CACA,MAAOC,CAAAA,MAAP,KAAmB,UAAnB,C,wFAEA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACC,KAAD,CAAW,IACfC,CAAAA,OADe,CACHD,KADG,CACfC,OADe,CAEvB,GAAMC,CAAAA,OAAO,CAAGF,KAAK,CAACE,OAAtB,CACA,GAAMC,CAAAA,SAAS,CAAGH,KAAK,CAACG,SAAxB,CACA,GAAMC,CAAAA,SAAS,CAAGJ,KAAK,CAACI,SAAxB,CACA,GAAMC,CAAAA,SAAS,CAAGL,KAAK,CAACK,SAAxB,CACA,GAAMC,CAAAA,MAAM,CAAGN,KAAK,CAACM,MAArB,CACA,GAAMC,CAAAA,SAAS,CAAGP,KAAK,CAACO,SAAxB,CACA,GAAMC,CAAAA,UAAU,CAAGR,KAAK,CAACQ,UAAzB,CAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,KAAD,CAAW,CAC5BV,KAAK,CAACW,QAAN,CAAeD,KAAf,EACH,CAFD,CAIA,mBACI,aAAK,SAAS,CAAET,OAAO,CAACW,WAAxB,wBACI,KAAC,OAAD,EAAS,SAAS,CAAEX,OAAO,CAACY,OAA5B,EADJ,cAEI,aAAK,MAAM,KAAX,CAAY,SAAS,CAAEZ,OAAO,CAACa,UAA/B,wBACA,YAAK,SAAS,CAAEb,OAAO,CAACc,QAAxB,UACKV,SAAS,eACV,oCACI,aAAK,SAAS,CAAEJ,OAAO,CAACe,UAAxB,wBACA,KAAC,UAAD,EAAY,SAAS,CAAEf,OAAO,CAACgB,YAA/B,UAA8Cd,SAA9C,EADA,cAEA,MAAC,UAAD,EAAY,SAAS,CAAEF,OAAO,CAACiB,OAA/B,yBAAoDd,SAAS,CAAG,GAAhE,OAFA,GADJ,cAKI,KAAC,YAAD,EAAc,IAAI,CAAEF,OAApB,CAA6B,UAAU,CAAEM,UAAzC,EALJ,GAFJ,EADA,cAYA,aAAK,SAAS,CAAEP,OAAO,CAACkB,cAAxB,wBACI,KAAC,YAAD,EAAc,MAAM,CAAEb,MAAtB,CAA8B,QAAQ,CAAEG,YAAxC,EADJ,cAEI,YAAK,SAAS,CAAER,OAAO,CAACmB,SAAxB,uBACA,KAAC,UAAD,EAAY,IAAI,CAAEb,SAAlB,CAA6B,UAAU,CAAED,MAAzC,EADA,EAFJ,GAZA,GAFJ,GADJ,CAwBH,CAtCD,CAwCA,cAAehB,CAAAA,UAAU,CAACQ,MAAD,CAAV,CAAmBC,OAAnB,CAAf","sourcesContent":["import React from 'react'\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { Typography, TextField, Button, Divider } from \"@material-ui/core\";\r\n\r\nimport PieChartComp from \"components/PieChart/piechart\"\r\nimport TweetTable from \"components/TweetTable/tweetTable\"\r\nimport TableButtons from \"components/TableButtons/tableButtons\"\r\nimport styles from \"./styles\"\r\n\r\nconst Display = (props) => {\r\n    const { classes } = props;\r\n    const pieData = props.pieData;\r\n    const prevQuery = props.prevQuery;\r\n    const sentiment = props.sentiment;\r\n    const chartLoad = props.chartLoad;\r\n    const filter = props.filter;\r\n    const tweetList = props.tweetList;\r\n    const tweetCount = props.tweetCount;\r\n\r\n    const handleFilter = (input) => {\r\n        props.onChange(input);\r\n    }\r\n\r\n    return (    \r\n        <div className={classes.contentRoot}>\r\n            <Divider className={classes.divider} />\r\n            <div layout className={classes.searchPane}> \r\n            <div className={classes.leftPane}>\r\n                {chartLoad &&\r\n                <div>\r\n                    <div className={classes.detailCont}>\r\n                    <Typography className={classes.detailsQuery}>{prevQuery}</Typography>\r\n                    <Typography className={classes.details}>Sentiment: {sentiment * 100}%</Typography>\r\n                    </div>\r\n                    <PieChartComp data={pieData} tweetCount={tweetCount} />\r\n                </div>\r\n                }\r\n            </div>\r\n            <div className={classes.tableContainer}>\r\n                <TableButtons filter={filter} onChange={handleFilter} />\r\n                <div className={classes.dataTable}>\r\n                <TweetTable data={tweetList} filterItem={filter} />\r\n                </div>\r\n            </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default withStyles(styles)(Display);\r\n"]},"metadata":{},"sourceType":"module"}