{"ast":null,"code":"import React,{useState,useEffect}from'react';import{withStyles}from\"@material-ui/core/styles\";import{Typography}from\"@material-ui/core\";import{PieChart,Pie,Cell,Tooltip,Legend}from\"recharts\";import Counter from\"components/Counter/counter\";import styles from\"./styles\";// [positive, neutral, negative]\n// green, blue, red\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var COLORS=[\"#8CC784\",\"#5C84C3\",\"#C35C5C\"];var PieChartComp=function PieChartComp(props){var classes=props.classes;var data=props.data;var tweetCount=props.tweetCount;var renderPlus=function renderPlus(input){var result=\"\";if(input===100){result=\"+\";}return result;};return/*#__PURE__*/_jsxs(\"div\",{className:classes.container,children:[/*#__PURE__*/_jsxs(PieChart,{width:400,height:360,children:[/*#__PURE__*/_jsx(Pie,{data:data,cx:\"50%\",cy:\"50%\",innerRadius:100,outerRadius:120,fill:\"#8884d8\",paddingAngle:5,dataKey:\"value\",label:true,children:data.map(function(entry,index){return/*#__PURE__*/_jsx(Cell,{fill:COLORS[index%COLORS.length]},\"cell-\".concat(index));})}),/*#__PURE__*/_jsx(Legend,{verticalAlign:\"bottom\",height:36})]}),/*#__PURE__*/_jsxs(Typography,{className:classes.count,children:[/*#__PURE__*/_jsx(Counter,{style:{color:'red'},from:0,to:tweetCount}),renderPlus(tweetCount)]}),/*#__PURE__*/_jsx(Typography,{className:classes.countDetails,children:\"tweets in the last seven days\"})]});};export default withStyles(styles)(PieChartComp);","map":{"version":3,"sources":["C:/Users/byron/Documents/Docs/Programming/sap_heroku/client/src/components/PieChart/piechart.js"],"names":["React","useState","useEffect","withStyles","Typography","PieChart","Pie","Cell","Tooltip","Legend","Counter","styles","COLORS","PieChartComp","props","classes","data","tweetCount","renderPlus","input","result","container","map","entry","index","length","count","color","countDetails"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,OAASC,UAAT,KAA2B,0BAA3B,CACA,OAASC,UAAT,KAA2B,mBAA3B,CACA,OAASC,QAAT,CAAmBC,GAAnB,CAAwBC,IAAxB,CAA8BC,OAA9B,CAAuCC,MAAvC,KAAqD,UAArD,CACA,MAAOC,CAAAA,OAAP,KAAoB,4BAApB,CACA,MAAOC,CAAAA,MAAP,KAAmB,UAAnB,CAEA;AACA;wFACA,GAAMC,CAAAA,MAAM,CAAG,CAAC,SAAD,CAAY,SAAZ,CAAuB,SAAvB,CAAf,CAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,KAAD,CAAW,IACpBC,CAAAA,OADoB,CACRD,KADQ,CACpBC,OADoB,CAE5B,GAAMC,CAAAA,IAAI,CAAGF,KAAK,CAACE,IAAnB,CACA,GAAMC,CAAAA,UAAU,CAAGH,KAAK,CAACG,UAAzB,CAEA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,KAAD,CAAW,CAC1B,GAAIC,CAAAA,MAAM,CAAG,EAAb,CACA,GAAID,KAAK,GAAK,GAAd,CAAmB,CACfC,MAAM,CAAG,GAAT,CACH,CAED,MAAOA,CAAAA,MAAP,CACH,CAPD,CASA,mBACI,aAAK,SAAS,CAAEL,OAAO,CAACM,SAAxB,wBACI,MAAC,QAAD,EAAU,KAAK,CAAE,GAAjB,CAAsB,MAAM,CAAE,GAA9B,wBACI,KAAC,GAAD,EACA,IAAI,CAAEL,IADN,CAEA,EAAE,CAAC,KAFH,CAGA,EAAE,CAAC,KAHH,CAIA,WAAW,CAAE,GAJb,CAKA,WAAW,CAAE,GALb,CAMA,IAAI,CAAC,SANL,CAOA,YAAY,CAAE,CAPd,CAQA,OAAO,CAAC,OARR,CASA,KAAK,KATL,UAWCA,IAAI,CAACM,GAAL,CAAS,SAACC,KAAD,CAAQC,KAAR,qBACN,KAAC,IAAD,EAA4B,IAAI,CAAEZ,MAAM,CAACY,KAAK,CAAGZ,MAAM,CAACa,MAAhB,CAAxC,iBAAmBD,KAAnB,EADM,EAAT,CAXD,EADJ,cAgBI,KAAC,MAAD,EAAQ,aAAa,CAAC,QAAtB,CAA+B,MAAM,CAAE,EAAvC,EAhBJ,GADJ,cAoBI,MAAC,UAAD,EAAY,SAAS,CAAET,OAAO,CAACW,KAA/B,wBACI,KAAC,OAAD,EAAS,KAAK,CAAE,CAACC,KAAK,CAAE,KAAR,CAAhB,CAAgC,IAAI,CAAE,CAAtC,CAAyC,EAAE,CAAEV,UAA7C,EADJ,CAEKC,UAAU,CAACD,UAAD,CAFf,GApBJ,cAwBI,KAAC,UAAD,EAAY,SAAS,CAAEF,OAAO,CAACa,YAA/B,2CAxBJ,GADJ,CA6BH,CA3CD,CA6CA,cAAezB,CAAAA,UAAU,CAACQ,MAAD,CAAV,CAAmBE,YAAnB,CAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport { PieChart, Pie, Cell, Tooltip, Legend } from \"recharts\";\r\nimport Counter from \"components/Counter/counter\"\r\nimport styles from \"./styles\"\r\n\r\n// [positive, neutral, negative]\r\n// green, blue, red\r\nconst COLORS = [\"#8CC784\", \"#5C84C3\", \"#C35C5C\"];\r\n\r\nconst PieChartComp = (props) => {\r\n    const { classes } = props;\r\n    const data = props.data;\r\n    const tweetCount = props.tweetCount\r\n\r\n    const renderPlus = (input) => {\r\n        let result = \"\";\r\n        if (input === 100) {\r\n            result = \"+\"\r\n        }\r\n        \r\n        return result;\r\n    }\r\n\r\n    return (\r\n        <div className={classes.container}>\r\n            <PieChart width={400} height={360}>\r\n                <Pie\r\n                data={data}\r\n                cx=\"50%\"\r\n                cy=\"50%\"\r\n                innerRadius={100}\r\n                outerRadius={120}\r\n                fill=\"#8884d8\"\r\n                paddingAngle={5}\r\n                dataKey=\"value\"\r\n                label\r\n                >\r\n                {data.map((entry, index) => (\r\n                    <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\r\n                ))}\r\n                </Pie>\r\n                <Legend verticalAlign=\"bottom\" height={36}/>\r\n                {/*<Tooltip coordinate={{x: 100, y: 100}} contentStyle={{backgroundColor: '#ECF0F1', border: 'none', borderRadius: 5, zIndex: 1000}} cursor={{ stroke: 'red', strokeWidth: 2 }} />*/}\r\n            </PieChart>\r\n            <Typography className={classes.count}>\r\n                <Counter style={{color: 'red'}} from={0} to={tweetCount} />\r\n                {renderPlus(tweetCount)}\r\n            </Typography>\r\n            <Typography className={classes.countDetails}>tweets in the last seven days</Typography>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(PieChartComp)\r\n"]},"metadata":{},"sourceType":"module"}