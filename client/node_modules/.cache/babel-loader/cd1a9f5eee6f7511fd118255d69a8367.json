{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\byron\\\\Documents\\\\Docs\\\\Programming\\\\sap_heroku\\\\client\\\\src\\\\views\\\\home\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { Typography, TextField, Button, Divider } from \"@material-ui/core\";\nimport { motion } from \"framer-motion\";\nimport SearchIcon from '@material-ui/icons/Search'; // Local imports\n\nimport Display from \"components/Display/display\";\nimport LoadingSkeleton from \"components/Skeleton/skeleton\";\nimport styles from \"./styles.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Home = props => {\n  _s();\n\n  const {\n    classes\n  } = props;\n  const [Query, setQuery] = useState(\"\");\n  const [PrevQuery, setPrevQuery] = useState(\"\");\n  const [Filter, setFilter] = useState(\"Positive\");\n  const [Sentiment, setSentiment] = useState(\"\");\n  const [pieData, setPieData] = useState([]);\n  const [tweetList, setTweetList] = useState([]);\n  const [tweetCount, setTweetCount] = useState(0);\n  const [error, setError] = useState(false);\n  const [loaded, setLoaded] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [chartLoad, setChartLoad] = useState(false);\n  const [params, setParams] = useState([{\n    verified: false,\n    retweet: false,\n    exact: false,\n    hashtags: false\n  }]);\n\n  const handleFilter = value => {\n    setFilter(value);\n  };\n\n  const handleSubmit = event => {\n    console.log(\"here\");\n    console.log(Query);\n\n    if (Query !== \"\") {\n      // string.charAt(0).toUpperCase() + string.slice(1);\n      setError(false);\n      setLoaded(false);\n      setLoading(true);\n      setChartLoad(false);\n      setFilter(\"Positive\");\n      setPrevQuery(Query.charAt(0).toUpperCase() + Query.slice(1));\n      setQuery(\"\");\n      setTimeout(() => {\n        fetchTweets();\n      }, 500);\n      setTimeout(() => {\n        setChartLoad(true);\n      }, 1000);\n    }\n\n    event.preventDefault();\n  };\n\n  const fetchTweets = () => {\n    axios.get('/api/getTweets', {\n      params: {\n        keyword: Query,\n        verified: params.verified,\n        retweet: params.retweet,\n        exact: params.exact,\n        hashtags: params.hashtags\n      }\n    }).then(response => {\n      let data = response.data;\n\n      if (data === -1) {\n        setError(true);\n        console.log(\"error shit\");\n      } else {\n        setLoading(false);\n        setLoaded(true);\n        setSentiment(data[0]);\n        setPieData(data[1]);\n        setTweetList(data[2]);\n        setTweetCount(data[3]);\n      }\n    }).catch(error => {\n      console.error(error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      className: classes.title,\n      children: \"Welcome to the Twitter Sentiment Tool\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      className: classes.desc,\n      children: \"Enter a topic to find the overall sentiment on Twitter.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(motion.div, {\n      layout: true,\n      className: classes.activeContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        className: classes.inputForm,\n        noValidate: true,\n        autoComplete: \"off\",\n        onSubmit: handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(motion.div, {\n          layout: true,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.inputRow,\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              className: classes.field,\n              label: \"Search\",\n              variant: \"outlined\",\n              value: Query,\n              onChange: event => setQuery(event.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.searchBtn,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                disabled: Query === \"\",\n                type: \"submit\",\n                children: /*#__PURE__*/_jsxDEV(SearchIcon, {\n                  className: classes.searchIcon\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 108,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.settingsRow,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.paramButton,\n              onClick: () => setParams({ ...params,\n                verified: !params.verified\n              }),\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                disabled: !params.verified,\n                children: \"Verified\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.paramButton,\n              onClick: () => setParams({ ...params,\n                retweet: !params.retweet\n              }),\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                disabled: !params.retweet,\n                children: \"No Retweets\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.paramButton,\n              onClick: () => setParams({ ...params,\n                exact: !params.exact\n              }),\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                disabled: !params.exact,\n                children: \"Exact Phrase\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.paramButton,\n              onClick: () => setParams({ ...params,\n                hashtags: !params.hashtags\n              }),\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                disabled: !params.hashtags,\n                children: \"Has Hashtags\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }, this), error && /*#__PURE__*/_jsxDEV(Typography, {\n        children: \"No tweets returned. Try again\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 23\n      }, this), loading && /*#__PURE__*/_jsxDEV(LoadingSkeleton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 25\n      }, this), loaded && /*#__PURE__*/_jsxDEV(Display, {\n        tweetCount: tweetCount,\n        chartLoad: chartLoad,\n        prevQuery: PrevQuery,\n        sentiment: Sentiment,\n        filter: Filter,\n        tweetList: tweetList,\n        onChange: handleFilter,\n        pieData: pieData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 7\n  }, this);\n};\n\n_s(Home, \"3nT9HF1kmv2FpkmcU/1fBTBIbY8=\");\n\n_c = Home;\nexport default withStyles(styles)(Home);\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/Users/byron/Documents/Docs/Programming/sap_heroku/client/src/views/home/index.js"],"names":["React","useState","useEffect","axios","withStyles","Typography","TextField","Button","Divider","motion","SearchIcon","Display","LoadingSkeleton","styles","Home","props","classes","Query","setQuery","PrevQuery","setPrevQuery","Filter","setFilter","Sentiment","setSentiment","pieData","setPieData","tweetList","setTweetList","tweetCount","setTweetCount","error","setError","loaded","setLoaded","loading","setLoading","chartLoad","setChartLoad","params","setParams","verified","retweet","exact","hashtags","handleFilter","value","handleSubmit","event","console","log","charAt","toUpperCase","slice","setTimeout","fetchTweets","preventDefault","get","keyword","then","response","data","catch","root","title","desc","activeContainer","inputForm","inputRow","field","target","searchBtn","searchIcon","settingsRow","paramButton"],"mappings":"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","sourcesContent":["import { React, useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { Typography, TextField, Button, Divider } from \"@material-ui/core\";\r\nimport { motion } from \"framer-motion\"\r\n\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\n// Local imports\r\nimport Display from \"components/Display/display\"\r\nimport LoadingSkeleton from \"components/Skeleton/skeleton\"\r\nimport styles from \"./styles.js\";\r\n\r\nconst Home = (props) => {  \r\n    const { classes } = props;\r\n\r\n    const [Query, setQuery] = useState(\"\");\r\n    const [PrevQuery, setPrevQuery] = useState(\"\");\r\n\r\n    const [Filter, setFilter] = useState(\"Positive\");\r\n    const [Sentiment, setSentiment] = useState(\"\");\r\n    const [pieData, setPieData] = useState([]);\r\n    const [tweetList, setTweetList] = useState([]);\r\n    const [tweetCount, setTweetCount] = useState(0);\r\n    const [error, setError] = useState(false);\r\n\r\n    const [loaded, setLoaded] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n    const [chartLoad, setChartLoad] = useState(false);\r\n\r\n    const [params, setParams] = useState([{\r\n      verified: false,\r\n      retweet: false,\r\n      exact: false,\r\n      hashtags: false\r\n    }]);\r\n\r\n    const handleFilter = (value) => {\r\n      setFilter(value);\r\n    }\r\n  \r\n    const handleSubmit = (event) => {\r\n      console.log(\"here\")\r\n      console.log(Query)\r\n      if (Query !== \"\")\r\n      {\r\n        // string.charAt(0).toUpperCase() + string.slice(1);\r\n        setError(false);\r\n        setLoaded(false);\r\n        setLoading(true);\r\n        setChartLoad(false);\r\n        setFilter(\"Positive\");\r\n        setPrevQuery(Query.charAt(0).toUpperCase() + Query.slice(1));\r\n        setQuery(\"\");\r\n        setTimeout(() => {fetchTweets();}, 500)\r\n        setTimeout(() => {setChartLoad(true);}, 1000)\r\n      }   \r\n      event.preventDefault();\r\n    };\r\n\r\n    const fetchTweets = () => {\r\n      axios.get('/api/getTweets', { params:{ \r\n        keyword: Query,\r\n        verified: params.verified,\r\n        retweet: params.retweet,\r\n        exact: params.exact,\r\n        hashtags: params.hashtags\r\n      }})\r\n      .then((response) => {\r\n        let data = response.data;\r\n        if (data === -1)\r\n        {\r\n          setError(true);\r\n          console.log(\"error shit\")\r\n        } else\r\n        {\r\n          setLoading(false);\r\n          setLoaded(true);\r\n          setSentiment(data[0]);\r\n          setPieData(data[1]);\r\n          setTweetList(data[2]);\r\n          setTweetCount(data[3]);\r\n        }\r\n        \r\n      }).catch((error) => {\r\n        console.error(error);\r\n      });\r\n    }\r\n\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <Typography className={classes.title}>Welcome to the Twitter Sentiment Tool</Typography>\r\n        <Typography className={classes.desc}>Enter a topic to find the overall sentiment on Twitter.</Typography>\r\n        <motion.div layout className={classes.activeContainer}>\r\n            <form className={classes.inputForm} noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\r\n              <motion.div layout>\r\n                <div className={classes.inputRow}>\r\n                    <TextField \r\n                        className={classes.field}\r\n                        label=\"Search\"\r\n                        variant=\"outlined\"\r\n                        value={Query}\r\n                        onChange={(event) => setQuery(event.target.value)}\r\n                    />\r\n                  <div className={classes.searchBtn}>\r\n                    <Button disabled={Query === \"\"} type=\"submit\">\r\n                        <SearchIcon  className={classes.searchIcon} />\r\n                    </Button>\r\n                  </div>\r\n                </div>\r\n                <div className={classes.settingsRow}>\r\n                    <div className={classes.paramButton} onClick={() => setParams({...params, verified: !params.verified})}>\r\n                      <Button disabled={!params.verified}>Verified</Button>\r\n                    </div>\r\n                    <div className={classes.paramButton} onClick={() => setParams({...params, retweet: !params.retweet})}>\r\n                      <Button disabled={!params.retweet}>No Retweets</Button>\r\n                    </div>\r\n                    <div className={classes.paramButton} onClick={() => setParams({...params, exact: !params.exact})}>\r\n                      <Button disabled={!params.exact}>Exact Phrase</Button>\r\n                    </div>\r\n                    <div className={classes.paramButton} onClick={() => setParams({...params, hashtags: !params.hashtags})}>\r\n                      <Button disabled={!params.hashtags}>Has Hashtags</Button>\r\n                    </div>\r\n                </div>\r\n                \r\n              </motion.div>\r\n            </form>\r\n            {error && <Typography>No tweets returned. Try again</Typography>}\r\n            {loading && <LoadingSkeleton /> }\r\n            {loaded && <Display tweetCount={tweetCount} chartLoad={chartLoad} prevQuery={PrevQuery} sentiment={Sentiment} filter={Filter} tweetList={tweetList} onChange={handleFilter} pieData={pieData}/> }\r\n        </motion.div>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default withStyles(styles)(Home);\r\n"]},"metadata":{},"sourceType":"module"}