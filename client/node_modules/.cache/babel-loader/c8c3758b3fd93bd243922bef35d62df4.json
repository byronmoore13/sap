{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\byron\\\\Documents\\\\Docs\\\\Programming\\\\sap_express\\\\client\\\\src\\\\views\\\\home\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState } from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { Typography, TextField, Button } from \"@material-ui/core\";\nimport { PieChart, Pie, Cell, Tooltip } from \"recharts\";\nimport styles from \"./styles.js\";\nimport PieChartComp from \"../../components/PieChart/piechart\";\nimport TweetTable from \"../../components/TweetTable/tweetTable\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Home = props => {\n  _s();\n\n  const [Query, setQuery] = useState(\"\");\n  const [Sentiment, setSentiment] = useState(\"\");\n  const [pieData, setPieData] = useState([]);\n  const [tweetList, setTweetList] = useState([]);\n  const [loaded, setLoaded] = useState(false);\n\n  const handleSubmit = () => {\n    if (Query !== \"\") {\n      fetchTweets();\n    }\n  };\n\n  const fetchTweets = () => {\n    fetch('/api/getTweets?query=' + Query).then(res => res.json()).then(data => {\n      console.log(data);\n      setLoaded(true);\n      setSentiment(data[0]);\n      setPieData(data[1]);\n      setTweetList(data[2]);\n    });\n  };\n\n  const {\n    classes\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      children: \"Welcome to the Twitter Sentiment Tool\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: classes.input,\n      noValidate: true,\n      autoComplete: \"off\",\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        className: classes.field,\n        label: \"Search\",\n        variant: \"outlined\",\n        value: Query,\n        onChange: event => setQuery(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: classes.button,\n        onClick: () => handleSubmit(),\n        variant: \"contained\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this), loaded && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.searchPane,\n      children: [/*#__PURE__*/_jsxDEV(PieChartComp, {\n        data: pieData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.container,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.buttons,\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => setFilter(\"Positive\"),\n            children: \"Positive\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => setFilter(\"Neutral\"),\n            children: \"Neutral\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => setFilter(\"Negative\"),\n            children: \"Negative\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(TweetTable, {\n          data: tweetList,\n          filterItem: \"Positive\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }, this), Sentiment]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 7\n  }, this);\n};\n\n_s(Home, \"n2FHT8ELaD7YD7gV1XsOcrU8QIQ=\");\n\n_c = Home;\nexport default withStyles(styles)(Home);\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/Users/byron/Documents/Docs/Programming/sap_express/client/src/views/home/index.js"],"names":["React","useState","withStyles","Typography","TextField","Button","PieChart","Pie","Cell","Tooltip","styles","PieChartComp","TweetTable","Home","props","Query","setQuery","Sentiment","setSentiment","pieData","setPieData","tweetList","setTweetList","loaded","setLoaded","handleSubmit","fetchTweets","fetch","then","res","json","data","console","log","classes","root","input","field","event","target","value","button","searchPane","container","buttons","setFilter"],"mappings":"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","sourcesContent":["import { React, useState } from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { Typography, TextField, Button } from \"@material-ui/core\";\r\nimport { PieChart, Pie, Cell, Tooltip } from \"recharts\";\r\nimport styles from \"./styles.js\";\r\nimport PieChartComp from \"../../components/PieChart/piechart\"\r\nimport TweetTable from \"../../components/TweetTable/tweetTable\"\r\n\r\nconst Home = (props) => {\r\n    const [Query, setQuery] = useState(\"\");\r\n    const [Sentiment, setSentiment] = useState(\"\");\r\n    const [pieData, setPieData] = useState([])\r\n    const [tweetList, setTweetList] = useState([])\r\n    const [loaded, setLoaded] = useState(false)\r\n  \r\n    const handleSubmit = () => {\r\n      if (Query !== \"\")\r\n      {\r\n         fetchTweets();\r\n      }   \r\n    };\r\n\r\n    const fetchTweets = () => {\r\n      fetch('/api/getTweets?query=' + Query)\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        console.log(data);\r\n        setLoaded(true);\r\n        setSentiment(data[0]);\r\n        setPieData(data[1]);\r\n        setTweetList(data[2])\r\n      })\r\n    }\r\n\r\n    const { classes } = props;\r\n    return (\r\n      <div className={classes.root}>\r\n        <Typography>Welcome to the Twitter Sentiment Tool</Typography>\r\n        <form className={classes.input} noValidate autoComplete=\"off\">\r\n            <TextField \r\n                className={classes.field}\r\n                label=\"Search\"\r\n                variant=\"outlined\"\r\n                value={Query}\r\n                onChange={event => setQuery(event.target.value)}\r\n            />\r\n            <Button className={classes.button} onClick={() => handleSubmit()} variant=\"contained\">Submit</Button>\r\n        </form>\r\n        \r\n        {loaded && \r\n          <div className={classes.searchPane}>  \r\n            <PieChartComp data={pieData} />\r\n            <div className={classes.container}>\r\n              <div className={classes.buttons}>\r\n                <Button onClick={() => setFilter(\"Positive\")}>Positive</Button>\r\n                <Button onClick={() => setFilter(\"Neutral\")}>Neutral</Button>\r\n                <Button onClick={() => setFilter(\"Negative\")}>Negative</Button>\r\n              </div>\r\n              <TweetTable data={tweetList} filterItem={\"Positive\"} />\r\n            </div>\r\n          </div>\r\n        }\r\n        \r\n        {Sentiment}\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default withStyles(styles)(Home);\r\n"]},"metadata":{},"sourceType":"module"}