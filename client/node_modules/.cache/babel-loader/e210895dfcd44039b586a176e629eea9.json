{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\byron\\\\Documents\\\\Docs\\\\Programming\\\\sap_express\\\\client\\\\src\\\\views\\\\home\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState } from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { Typography, TextField, Button } from \"@material-ui/core\";\nimport { PieChart, Pie, Cell } from \"recharts\";\nimport styles from \"./styles.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Home = props => {\n  _s();\n\n  const [Query, setQuery] = useState(\"\");\n  const [Sentiment, setSentiment] = useState(\"\");\n\n  const handleSubmit = () => {\n    if (Query !== \"\") {\n      fetchTweets();\n    }\n  };\n\n  const fetchTweets = () => {\n    fetch('/api/getTweets?query=' + Query).then(res => res.json()).then(data => {\n      console.log(data);\n      setSentiment(data[1]);\n    });\n  };\n\n  const {\n    classes\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      children: \"Welcome to the Twitter Sentiment Tool\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: classes.input,\n      noValidate: true,\n      autoComplete: \"off\",\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        className: classes.field,\n        label: \"Search\",\n        variant: \"outlined\",\n        value: Query,\n        onChange: event => setQuery(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: classes.button,\n        onClick: () => handleSubmit(),\n        variant: \"contained\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(PieChart, {\n      width: 800,\n      height: 400,\n      children: /*#__PURE__*/_jsxDEV(Pie, {\n        data: data,\n        cx: 120,\n        cy: 200,\n        innerRadius: 60,\n        outerRadius: 80,\n        fill: \"#8884d8\",\n        paddingAngle: 5,\n        dataKey: \"value\",\n        children: data.map((entry, index) => /*#__PURE__*/_jsxDEV(Cell, {\n          fill: COLORS[index % COLORS.length]\n        }, `cell-${index}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this), Sentiment]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 7\n  }, this);\n};\n\n_s(Home, \"B86XYdYLvpvLjPU62xl1XIkcZeM=\");\n\n_c = Home;\nexport default withStyles(styles)(Home);\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/Users/byron/Documents/Docs/Programming/sap_express/client/src/views/home/index.js"],"names":["React","useState","withStyles","Typography","TextField","Button","PieChart","Pie","Cell","styles","Home","props","Query","setQuery","Sentiment","setSentiment","handleSubmit","fetchTweets","fetch","then","res","json","data","console","log","classes","root","input","field","event","target","value","button","map","entry","index","COLORS","length"],"mappings":"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","sourcesContent":["import { React, useState } from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { Typography, TextField, Button } from \"@material-ui/core\";\r\nimport { PieChart, Pie, Cell } from \"recharts\";\r\nimport styles from \"./styles.js\";\r\n\r\nconst Home = (props) => {\r\n    const [Query, setQuery] = useState(\"\");\r\n    const [Sentiment, setSentiment] = useState(\"\");\r\n  \r\n    const handleSubmit = () => {\r\n      if (Query !== \"\")\r\n      {\r\n         fetchTweets();\r\n      }   \r\n    };\r\n\r\n    const fetchTweets = () => {\r\n      fetch('/api/getTweets?query=' + Query)\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        console.log(data)\r\n          setSentiment(data[1]);\r\n\r\n      })\r\n    }\r\n\r\n    const { classes } = props;\r\n    return (\r\n      <div className={classes.root}>\r\n        <Typography>Welcome to the Twitter Sentiment Tool</Typography>\r\n        <form className={classes.input} noValidate autoComplete=\"off\">\r\n            <TextField \r\n                className={classes.field}\r\n                label=\"Search\"\r\n                variant=\"outlined\"\r\n                value={Query}\r\n                onChange={event => setQuery(event.target.value)}\r\n            />\r\n            <Button className={classes.button} onClick={() => handleSubmit()} variant=\"contained\">Submit</Button>\r\n        </form>\r\n        <PieChart width={800} height={400}>\r\n          <Pie\r\n            data={data}\r\n            cx={120}\r\n            cy={200}\r\n            innerRadius={60}\r\n            outerRadius={80}\r\n            fill=\"#8884d8\"\r\n            paddingAngle={5}\r\n            dataKey=\"value\"\r\n          >\r\n            {data.map((entry, index) => (\r\n              <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\r\n            ))}\r\n          </Pie>\r\n        </PieChart>\r\n        {Sentiment}\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default withStyles(styles)(Home);\r\n"]},"metadata":{},"sourceType":"module"}