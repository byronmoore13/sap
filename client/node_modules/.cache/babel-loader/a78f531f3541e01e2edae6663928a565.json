{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\byron\\\\Documents\\\\Docs\\\\Programming\\\\sap_heroku\\\\client\\\\src\\\\views\\\\home\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { Typography, TextField, Button, Divider, FormControl, Select, MenuItem, InputLabel } from \"@material-ui/core\";\nimport { motion } from \"framer-motion\";\nimport SearchIcon from '@material-ui/icons/Search'; // Local imports\n\nimport Display from \"components/Display/display\";\nimport LoadingSkeleton from \"components/Skeleton/skeleton\";\nimport styles from \"./styles.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Home = props => {\n  _s();\n\n  const {\n    classes\n  } = props;\n  const [Query, setQuery] = useState(\"\");\n  const [PrevQuery, setPrevQuery] = useState(\"\");\n  const [Filter, setFilter] = useState(\"Positive\");\n  const [Sentiment, setSentiment] = useState(\"\");\n  const [pieData, setPieData] = useState([]);\n  const [tweetList, setTweetList] = useState([]);\n  const [tweetCount, setTweetCount] = useState(0);\n  const [error, setError] = useState(false);\n  const [loaded, setLoaded] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [chartLoad, setChartLoad] = useState(false);\n  const [paramsObj, setParamsObj] = useState({\n    verified: false,\n    retweet: false,\n    exact: false,\n    hashtags: false,\n    analysis: 'npm'\n  });\n\n  const handleFilter = value => {\n    setFilter(value);\n  };\n\n  const handleAnalysis = value => {\n    console.log(value);\n    setParamsObj({ ...paramsObj,\n      analysis: value\n    });\n  };\n\n  const handleBoolean = bool => {\n    if (bool) {\n      return 1;\n    } else {\n      return 0;\n    }\n  };\n\n  const handleSubmit = event => {\n    console.log(\"here\");\n    console.log(Query);\n\n    if (Query !== \"\") {\n      // string.charAt(0).toUpperCase() + string.slice(1);\n      setError(false);\n      setLoaded(false);\n      setLoading(true);\n      setChartLoad(false);\n      setFilter(\"Positive\");\n      setPrevQuery(Query.charAt(0).toUpperCase() + Query.slice(1));\n      setQuery(\"\");\n      setTimeout(() => {\n        fetchTweets();\n      }, 500);\n      setTimeout(() => {\n        setChartLoad(true);\n      }, 1000);\n    }\n\n    event.preventDefault();\n  };\n\n  const fetchTweets = () => {\n    axios.get('/api/getTweets', {\n      params: {\n        keyword: Query,\n        verified: handleBoolean(paramsObj.verified),\n        retweet: handleBoolean(paramsObj.retweet),\n        exact: handleBoolean(paramsObj.exact),\n        hashtags: handleBoolean(paramsObj.hashtags),\n        analysis: paramsObj.analysis\n      }\n    }).then(response => {\n      let data = response.data;\n\n      if (data === -1) {\n        setError(true);\n        setLoading(false);\n      } else {\n        setLoading(false);\n        setLoaded(true);\n        setSentiment(data[0]);\n        setPieData(data[1]);\n        setTweetList(data[2]);\n        setTweetCount(data[3]);\n      }\n    }).catch(error => {\n      console.error(error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      className: classes.title,\n      children: \"Twitter Sentiment Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      className: classes.desc,\n      children: \"Enter a topic to find the overall sentiment on Twitter.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(motion.div, {\n      layout: true,\n      className: classes.activeContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        className: classes.inputForm,\n        noValidate: true,\n        autoComplete: \"off\",\n        onSubmit: handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(motion.div, {\n          layout: true,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.inputRow,\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              className: classes.field,\n              label: \"Search\",\n              variant: \"filled\",\n              value: Query,\n              onChange: event => setQuery(event.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.searchBtn,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                disabled: Query === \"\",\n                type: \"submit\",\n                children: /*#__PURE__*/_jsxDEV(SearchIcon, {\n                  className: classes.searchIcon\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 124,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.settingsRow,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.paramButton,\n              onClick: () => setParamsObj({ ...paramsObj,\n                verified: !paramsObj.verified\n              }),\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                disabled: !paramsObj.verified,\n                children: \"Verified\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.paramButton,\n              onClick: () => setParamsObj({ ...paramsObj,\n                retweet: !paramsObj.retweet\n              }),\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                disabled: !paramsObj.retweet,\n                children: \"No Retweets\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.paramButton,\n              onClick: () => setParamsObj({ ...paramsObj,\n                exact: !paramsObj.exact\n              }),\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                disabled: !paramsObj.exact,\n                children: \"Exact Phrase\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.paramButton,\n              onClick: () => setParamsObj({ ...paramsObj,\n                hashtags: !paramsObj.hashtags\n              }),\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                disabled: !paramsObj.hashtags,\n                children: \"Has Hashtags\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              variant: \"filled\",\n              className: classes.dropdownMenu,\n              children: /*#__PURE__*/_jsxDEV(Select, {\n                labelId: \"demo-simple-select-filled-label\",\n                id: \"demo-simple-select-filled\",\n                value: paramsObj.analysisMethod,\n                onChange: event => handleAnalysis(event.target.value),\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"tensorflow\",\n                  children: \"Tensorflow\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 148,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"npm\",\n                  children: \"NPM Library\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 149,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }, this), error && /*#__PURE__*/_jsxDEV(Typography, {\n        style: {\n          color: \"white\"\n        },\n        children: \"No tweets returned. Try again\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 23\n      }, this), loading && /*#__PURE__*/_jsxDEV(LoadingSkeleton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 25\n      }, this), loaded && /*#__PURE__*/_jsxDEV(Display, {\n        tweetCount: tweetCount,\n        chartLoad: chartLoad,\n        prevQuery: PrevQuery,\n        sentiment: Sentiment,\n        filter: Filter,\n        tweetList: tweetList,\n        onChange: handleFilter,\n        pieData: pieData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 7\n  }, this);\n};\n\n_s(Home, \"RVw0HPIou97MIKuwjwfPmNGExlU=\");\n\n_c = Home;\nexport default withStyles(styles)(Home);\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/Users/byron/Documents/Docs/Programming/sap_heroku/client/src/views/home/index.js"],"names":["React","useState","useEffect","axios","withStyles","Typography","TextField","Button","Divider","FormControl","Select","MenuItem","InputLabel","motion","SearchIcon","Display","LoadingSkeleton","styles","Home","props","classes","Query","setQuery","PrevQuery","setPrevQuery","Filter","setFilter","Sentiment","setSentiment","pieData","setPieData","tweetList","setTweetList","tweetCount","setTweetCount","error","setError","loaded","setLoaded","loading","setLoading","chartLoad","setChartLoad","paramsObj","setParamsObj","verified","retweet","exact","hashtags","analysis","handleFilter","value","handleAnalysis","console","log","handleBoolean","bool","handleSubmit","event","charAt","toUpperCase","slice","setTimeout","fetchTweets","preventDefault","get","params","keyword","then","response","data","catch","root","title","desc","activeContainer","inputForm","inputRow","field","target","searchBtn","searchIcon","settingsRow","paramButton","dropdownMenu","analysisMethod","color"],"mappings":"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","sourcesContent":["import { React, useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { Typography, TextField, Button, Divider, FormControl, Select, MenuItem, InputLabel } from \"@material-ui/core\";\r\nimport { motion } from \"framer-motion\"\r\n\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\n// Local imports\r\nimport Display from \"components/Display/display\"\r\nimport LoadingSkeleton from \"components/Skeleton/skeleton\"\r\nimport styles from \"./styles.js\";\r\n\r\nconst Home = (props) => {  \r\n    const { classes } = props;\r\n\r\n    const [Query, setQuery] = useState(\"\");\r\n    const [PrevQuery, setPrevQuery] = useState(\"\");\r\n\r\n    const [Filter, setFilter] = useState(\"Positive\");\r\n    const [Sentiment, setSentiment] = useState(\"\");\r\n    const [pieData, setPieData] = useState([]);\r\n    const [tweetList, setTweetList] = useState([]);\r\n    const [tweetCount, setTweetCount] = useState(0);\r\n    const [error, setError] = useState(false);\r\n\r\n    const [loaded, setLoaded] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n    const [chartLoad, setChartLoad] = useState(false);\r\n\r\n    const [paramsObj, setParamsObj] = useState({\r\n      verified: false,\r\n      retweet: false,\r\n      exact: false,\r\n      hashtags: false,\r\n      analysis: 'npm'\r\n    });\r\n\r\n    const handleFilter = (value) => {\r\n      setFilter(value);\r\n    }\r\n\r\n    const handleAnalysis = (value) => {\r\n      console.log(value)\r\n      setParamsObj({...paramsObj, analysis: value})\r\n    }\r\n\r\n    const handleBoolean = (bool) => {\r\n      if (bool) {\r\n        return 1;\r\n      }\r\n      else {\r\n        return 0;\r\n      }\r\n    }\r\n  \r\n    const handleSubmit = (event) => {\r\n      console.log(\"here\")\r\n      console.log(Query)\r\n      if (Query !== \"\")\r\n      {\r\n        // string.charAt(0).toUpperCase() + string.slice(1);\r\n        setError(false);\r\n        setLoaded(false);\r\n        setLoading(true);\r\n        setChartLoad(false);\r\n        setFilter(\"Positive\");\r\n        setPrevQuery(Query.charAt(0).toUpperCase() + Query.slice(1));\r\n        setQuery(\"\");\r\n        setTimeout(() => {fetchTweets();}, 500)\r\n        setTimeout(() => {setChartLoad(true);}, 1000)\r\n      }   \r\n      event.preventDefault();\r\n    };\r\n\r\n    const fetchTweets = () => {\r\n      axios.get('/api/getTweets', { params:{ \r\n        keyword: Query,\r\n        verified: handleBoolean(paramsObj.verified),\r\n        retweet: handleBoolean(paramsObj.retweet),\r\n        exact: handleBoolean(paramsObj.exact),\r\n        hashtags: handleBoolean(paramsObj.hashtags),\r\n        analysis: paramsObj.analysis,\r\n      }})\r\n      .then((response) => {\r\n        let data = response.data;\r\n        if (data === -1)\r\n        {\r\n          setError(true);\r\n          setLoading(false);\r\n        } else\r\n        {\r\n          setLoading(false);\r\n          setLoaded(true);\r\n          setSentiment(data[0]);\r\n          setPieData(data[1]);\r\n          setTweetList(data[2]);\r\n          setTweetCount(data[3]);\r\n        }\r\n        \r\n      }).catch((error) => {\r\n        console.error(error);\r\n      });\r\n    }\r\n\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <Typography className={classes.title}>Twitter Sentiment Search</Typography>\r\n        <Typography className={classes.desc}>Enter a topic to find the overall sentiment on Twitter.</Typography>\r\n        <motion.div layout className={classes.activeContainer}>\r\n            <form className={classes.inputForm} noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\r\n              <motion.div layout>\r\n                <div className={classes.inputRow}>\r\n                    <TextField \r\n                        className={classes.field}\r\n                        label=\"Search\"\r\n                        variant=\"filled\"\r\n                        value={Query}\r\n                        onChange={(event) => setQuery(event.target.value)}\r\n                    />\r\n                  <div className={classes.searchBtn}>\r\n                    <Button disabled={Query === \"\"} type=\"submit\">\r\n                        <SearchIcon  className={classes.searchIcon} />\r\n                    </Button>\r\n                  </div>\r\n                </div>\r\n                <div className={classes.settingsRow}>\r\n                    <div className={classes.paramButton} onClick={() => setParamsObj({...paramsObj, verified: !paramsObj.verified})}>\r\n                      <Button disabled={!paramsObj.verified}>Verified</Button>\r\n                    </div>\r\n                    <div className={classes.paramButton} onClick={() => setParamsObj({...paramsObj, retweet: !paramsObj.retweet})}>\r\n                      <Button disabled={!paramsObj.retweet}>No Retweets</Button>\r\n                    </div>\r\n                    <div className={classes.paramButton} onClick={() => setParamsObj({...paramsObj, exact: !paramsObj.exact})}>\r\n                      <Button disabled={!paramsObj.exact}>Exact Phrase</Button>\r\n                    </div>\r\n                    <div className={classes.paramButton} onClick={() => setParamsObj({...paramsObj, hashtags: !paramsObj.hashtags})}>\r\n                      <Button disabled={!paramsObj.hashtags}>Has Hashtags</Button>\r\n                    </div>\r\n                    <FormControl variant=\"filled\" className={classes.dropdownMenu}>\r\n                        <Select\r\n                        labelId=\"demo-simple-select-filled-label\"\r\n                        id=\"demo-simple-select-filled\"\r\n                        value={paramsObj.analysisMethod}\r\n                        onChange={(event) => handleAnalysis(event.target.value)}\r\n                        >\r\n                        <MenuItem value={\"tensorflow\"}>Tensorflow</MenuItem>\r\n                        <MenuItem value={\"npm\"}>NPM Library</MenuItem>\r\n                        </Select>\r\n                    </FormControl> \r\n                </div>\r\n              </motion.div>\r\n            </form>\r\n            {error && <Typography style={{color: \"white\"}}>No tweets returned. Try again</Typography>}\r\n            {loading && <LoadingSkeleton /> }\r\n            {loaded && <Display tweetCount={tweetCount} chartLoad={chartLoad} prevQuery={PrevQuery} sentiment={Sentiment} filter={Filter} tweetList={tweetList} onChange={handleFilter} pieData={pieData}/> }\r\n        </motion.div>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default withStyles(styles)(Home);\r\n"]},"metadata":{},"sourceType":"module"}